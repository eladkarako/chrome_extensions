2.0.2.24
* explicitly and exclusivly use passive-events in all event-listeners (where using 'preventDefault' is not needed as a part of the functionality anyway). should improve page-performances.
* alternative check for main method 'action' when running from a different JavaScript file ('at_document_end.js'/'at_document_idle.js'), instead of try/catch which slows down performances due to extensive call-stack and prevents discoverying for other thrown errors.

2.0.2.23
+ move logic to a browser-handled async block, by keeping 'action' as normal function, and moving all logic into a secodary 'async function async_action(){____}' block (which returns a promise, which isn't used for now). it simulates an old 'setTimeout(FUNCTION,0)'.

2.0.2.22
* improving nullification process with additional reference removing- when possible object reference will be removed not just return undefined.

2.0.2.21
+ DOM-injection is done with an clean-closure context. no function name is needed.

2.0.2.20
+ injection engine - countering various security restrictions, by using three variation of the same nullifying code: inline-text, base64-src (domain-less data url) and blob-src (considered same domain as the web-page).
* injection engine - generic improvements - removing duplicated code.
+ reduced memory usage by cleaning-up DOM nodes/objects after they are done.
+ nullification engine - improved nullification for function/class/constructor based non-strictly-speaking objects.
* generic improvements for easier maintaining  - function name is generic (but its content is not naturally), for injecting - the function name is generated from the description.
+ try/catch are added on various end-points of DOM-manipulation or referencing data from web-extension-client-side on actual client-side (calling "action" method for example).
+ adding more dynamic-content related events to trigger main action.

2.0.1.8
+ added execution from DOM-aspect.

2.0.1.7
* permission update for closed-tabs check before updating web-extension badge-number.

2.0.1.6
+ pre-locking the popstate-event against any event-handlers (for fast-loading lib.s)
* improving removing JavaScript-related methods.

1.0.3.12
* improved SRC storage as a non-whitespace string, for the JavaScript-injection.

1.0.3.8
* slight engine modifications.

1.0.3.7
* improving cross-browser-API compatibility.

1.0.3.6
* optimize code for a reduced in-memory-footprint.

1.0.3.5
* limiting to html pages (not XML ones, for example).

1.0.3.4
+ inject script, has content set by inner-html instead of a text-node child which won't work in early loading stages (before body loads..).
* trying to delete references first (of history-related objects).

1.0.1.1
* improved removing of History class and history instance, along with history state event of frame. On YouTube you will see SPF.JS errors on the main console, that is because the developers of SPF havn't verified History class exist before using it. Everything should work fine though, plus now you can block all 'spf.js' and 'lazy.min.js' instances with uBlock/AdBlock.

1.0.0.7
* invalidate History/history under main scope.

1.0.0.5
* changed to blocking code-block, to halt-rendering until executed (very early..)

1.0.0.3
+ initial.
